[{"/Users/gendevs/Documents/Assignment-One/src/index.js":"1","/Users/gendevs/Documents/Assignment-One/src/App.js":"2","/Users/gendevs/Documents/Assignment-One/src/reportWebVitals.js":"3","/Users/gendevs/Documents/Assignment-One/src/component/launch-screen.js":"4"},{"size":500,"mtime":1611225194393,"results":"5","hashOfConfig":"6"},{"size":247,"mtime":1611227918031,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611225194394,"results":"8","hashOfConfig":"6"},{"size":1788,"mtime":1611230088463,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qkdq2i",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gendevs/Documents/Assignment-One/src/index.js",[],"/Users/gendevs/Documents/Assignment-One/src/App.js",[],"/Users/gendevs/Documents/Assignment-One/src/reportWebVitals.js",[],"/Users/gendevs/Documents/Assignment-One/src/component/launch-screen.js",["18","19"],{"ruleId":"20","severity":1,"message":"21","line":8,"column":15,"nodeType":"22","endLine":13,"endColumn":6},{"ruleId":"23","severity":1,"message":"24","line":26,"column":17,"nodeType":"25","endLine":26,"endColumn":103},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]